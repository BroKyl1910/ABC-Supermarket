@model IEnumerable<ABCSupermarketMVC.Models.Product>

@{
    ViewData["Title"] = "Index";
}

<div class="main-wrapper">
    <div class="custom-card-header">
        <h1 class="title">Products</h1>
        <div class="header-controls">
            <a asp-controller="Products" asp-action="Create" class="material-icons big-icon">add_box</a>
        </div>

    </div>
    <div class="dark-hr"></div>
    <div class="card-wrapper">
        @foreach (Product product in Model)
        {
            <div class="custom-card product-card">
                <div class="custom-container">
                    <div class="options-wrapper">
                        <i class="material-icons delete-icon" id="@product.ProductId">delete</i>
                        <a asp-action="Edit" asp-route-id="@product.ProductId"><i class="material-icons edit-icon">edit</i></a>
                    </div>
                    <div class="index-image-container">
                        <img class="card-img" src="data:image/jpeg;base64,@Convert.ToBase64String(product.ProductImage)" />
                    </div>
                    <div class="card-product-info">
                        @if (product.ProductName.Length > 25)
                        {
                            <div class="custom-card-title custom-card-title-short">@product.ProductName.Substring(0, 25) ...</div>
                            <div class="custom-card-title custom-card-title-full">@product.ProductName</div>
                        }
                        else
                        {
                            <div class="custom-card-title custom-card-title-short">@product.ProductName</div>
                        }
                        <span class="card-price">R @product.ProductPrice</span>
                        <div class="desc-wrapper">
                            <div class="card-desc">@product.ProductDesc</div>
                        </div>
                    </div>

                </div>

            </div>
        }
    </div>

</div>

<div id="popup-container">
    <div id="delete-form-wrapper" class="rounded-container form-wrapper">
        <h1>Confirm Delete</h1>
        <hr>
        <p style="color:white;">Are you sure you want to delete this product?</p>
        <div class="control-group pull-right delete-button-group">
            <input class="delete-confirm-button" id="delete-no-button" type="button" value="No">
            <input class="delete-confirm-button" id="delete-yes-button" type="button" value="Yes">
        </div>
    </div>

</div>


<script>

    var idToDelete = null;
    //Delete button pressed
    $('.delete-icon').on('click', (evt) => {
        idToDelete = Number(evt.currentTarget.id);
        $('#popup-container').fadeIn();
        $('#delete-form-wrapper').show();
        $('#add-form-wrapper').hide();
    });

    //Delete cancelled
    $('#delete-no-button').on('click', () => {
        $('#popup-container').fadeOut();
        idToDelete = null;
    });

    //Delete confirmed
    $('#delete-yes-button').on('click', () => {
        $('#popup-container').fadeOut(400, () => {
            //window.location.replace('/Products/Delete/?id=' + idToDelete);
            $.ajax({
                method: "POST",
                url: '/Products/Delete/?id=' + idToDelete,
                success: () => {
                    window.location.replace('/Products/Index');
                }
            })
        });
    });

    //Close popup
    $(document).mouseup(function (e) {
        var container = $(".form-wrapper");

        if (!container.is(e.target) // if the target of the click isn't the container...
            && container.has(e.target).length === 0) // ... nor a descendant of the container
        {
            $('#popup-container').fadeOut();
        }
    });

    //Expand details on hover
    $(".product-card").hoverIntent(
        e => {
            var shortTitle = $(e.currentTarget).find(".custom-card-title-short");
            var fullTitle = $(e.currentTarget).find(".custom-card-title-full");
            var descWrapper = $(e.currentTarget).find(".desc-wrapper");

            $(e.currentTarget).css("position", "relative");
            $(e.currentTarget).css("z-index", "1");

            var referenceCard;
            if ($(e.currentTarget) != $('.product-card')[0]) {
                referenceCard = $('.product-card')[0];
            } else {
                referenceCard = $('.product-card')[1];
            }

            //Only change bottom margin if card is not in the last row of 4
            var numCardsInLastRow = $('.product-card').length % 4;
            if ($('.product-card').index($(e.currentTarget)) < $('.product-card').length - numCardsInLastRow) {
                var referenceHeight = $(referenceCard).height();
                var newMarginBottom = ($(e.currentTarget).height() + referenceHeight + 20) * - 1;
                console.log("Should change bottom margin");
                $(e.currentTarget).css("margin-bottom", newMarginBottom + "px");
            }

            $(descWrapper)
                .stop(true, true)
                .slideDown(100, () => {

                });

            if (fullTitle.length > 0) {
                $(fullTitle).slideDown();
                $(shortTitle).hide();
            }

        },
        e => {
            var descWrapper = $(e.currentTarget).find(".desc-wrapper");
            var shortTitle = $(e.currentTarget).find(".custom-card-title-short");
            var fullTitle = $(e.currentTarget).find(".custom-card-title-full");

            if (fullTitle.length > 0) {
                $(fullTitle).slideUp(100, () => {
                    $(shortTitle).show();
                });
            }

            $(descWrapper)
                .stop(true, true)
                .slideUp(100, () => {
                    $(e.currentTarget)
                        .css("margin-bottom", "10px")
                        .css("z-index", "0");
                });
        }
    );

</script>